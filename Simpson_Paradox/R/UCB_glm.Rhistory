ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
black.id<-(1:58)[-red.id]
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sort(sample(1:58)[1:29])
black.id<-(1:58)[-red.id]
red.id
black.id
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
black.id<-(1:58)[-red.id]
table(ID.13[black.id])
ID.12<-factor(ifelse(substr(class.roll$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
ID.12<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
table(ID.13[black.id])
table(ID.12[red.id])
table(ID.12[black.id])
red.id<-sort(sample(1:58)[1:29])
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
ID.12<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
table(ID.12[red.id])
table(ID.12[black.id])
red.id
black.id
red.id<-sort(sample(1:58)[1:29])
black.id<-(1:58)[-red.id]
sort(c(red.id, black.id))
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
ID.12<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
table(ID.12[red.id])
table(ID.12[black.id])
ls()
class.roll.1501[red.id, "ID"]
class.roll.1501[black.id, "ID"]
cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"], col.names=c("red", "black"))
cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"])
red.black.ID<-cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"])
names(red.black.ID)<-c("red", "black")
red.black.ID
red.black.ID<-cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"])
dimnames(red.black.ID)[[2]]<-c("red", "black")
red.black.ID
ls()
getwd()
save(file="red_black1501.rda", list=ls())
savehistory(file="red_black1501.Rhistory")
setwd("~/Dropbox/Works/Class/Statistics/R.WD/class2014")
rm(list=ls())
read.table("lab_presence.txt", header=F, sep="")
lab.presence<-read.table("lab_presence.txt", header=F, sep="")
dimnames(lab.presence)[[2]]<-c("ID", "name")
load("red_black_2014.rda")
ls()
class.roll$ID %in% lab.presence$ID
class.roll$ID[class.roll$ID %in% lab.presence$ID]
class.roll$ID[!(class.roll$ID %in% lab.presence$ID)]
class.roll$name[!(class.roll$ID %in% lab.presence$ID)]
class.roll.group[!(class.roll$ID %in% lab.presence$ID)]
table(class.roll.group[!(class.roll$ID %in% lab.presence$ID)])
which(class.roll$ID %in% lab.presence$ID)
which(!(class.roll$ID %in% lab.presence$ID))
class.roll$name[which(!(class.roll$ID %in% lab.presence$ID))]
class.roll
presence<-ifelse(class.roll$ID %in% lab.presence$ID, "present", "absent")
presence
presence<-factor(ifelse(class.roll$ID %in% lab.presence$ID, "present", "absent"), levels=c("present", "abesent"))
class.roll.2<-data.frame(class.roll, presence=presence)
class.roll.2
presence
presence<-factor(ifelse(class.roll$ID %in% lab.presence$ID, "present", "absent"), levels=c("present", "absent"))
presence
class.roll.2<-data.frame(class.roll, presence=presence)
class.roll.2
attach(class.roll.2)
detach()
table(class.roll.2$group, class.roll.2$presence)
substr(class.roll$name, 1, 6)
substr(class.roll$name, 1, 2) ==  "김"
substr(class.roll$name, 1, 2)
substr(class.roll$name, 1, 1)
substr(class.roll$name, 1, 1) == "김"
(substr(class.roll$name, 1, 1) == "김")[red.id]
list(red=class.roll$name[sort(red.id)], black=class.roll$name[sort(black.id)])
kim.id<-substr(class.roll$name, 1, 1)=="김"
kim.id
kim.id[red.id]
kim.id[black.id]
kim<-factor(ifelse(kim.id, "kim", "else"), levels=c("kim", "else"))
table(class.roll$group, kim)
table(class.roll$group, kim, dnn=NULL)
lee.id<-substr(class.roll$name, 1, 1)=="이"
lee<-factor(ifelse(lee.id, "lee", "else"), levels=c("lee", "else"))
table(class.roll$group, lee, dnn=NULL)
table(class.roll$group, kim, lee, dnn=NULL)
ftable(table(class.roll$group, kim, lee, dnn=NULL))
class.roll$name[lee.id]
class.roll$name[lee.id][red.id]
class.roll$name[red.id & lee.id]
red.id
lee.id
data.frame(class.roll, lee)
plot(ecdf(class.roll$n.accesses[red.id]), col="red",main="표본누적분포함수")
savehistory(file="red_black1501.Rhistory")
lines(ecdf(class.roll$n.accesses[black.id]), pch=15)
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
tapply(class.roll$n.accesses,class.roll$group,summary)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
ls()
load("red_black.rda")
red.id
tapply(class.roll$n.accesses,class.roll$group,summary)
class.roll.1105
red.id.1105<-which(class.roll.1105$group == "red")
black.id.1105<-which(class.roll.1105$group == "black")
lee.tf<-substr(class.roll$name, 1, 1) == "이"
table(lee.tf, class.roll.1105$group)
table(class.roll.1105$group, lee.tf)
red.id<-red.id.1105
black.id<-black.id.1105
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
plot(ecdf(class.roll$n.accesses[red.id]), col="red",main="표본누적분포함수")
lines(ecdf(class.roll$n.accesses[black.id]), pch=15)
kim.id<-substr(class.roll$name, 1, 1)=="김"
kim.id
kim.id<-which(substr(class.roll$name, 1, 1)=="김")
kim.id
kim<-substr(class.roll$name, 1, 1)=="김"
kim.fac<-factor(ifelse(kim, "kim", "else"), levels=c("kim", "else"))
lee<-substr(class.roll$name, 1, 1)=="이"
lee.fac<-factor(ifelse(lee.id, "lee", "else"), levels=c("lee", "else"))
table(class.roll$group, kim.fac)
table(class.roll$group, kim.fac, dnn=NULL)
table(class.roll$group, lee.fac)
table(class.roll$group, lee.fac, dnn=NULL)
getwd()
save(file="random_id.rda", c("red.id", "black.id"))
ls()
save(file="random_id.rda", list=c("red.id", "black.id"))
?load
?ks.test
ks.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id]))
ks.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id])
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id])
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)$statistic
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)$variance
wilcox.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)
?unique
duplicated(class.roll$n.accesses)
class.roll$n.accesses[duplicated(class.roll$n.accesses)]
unique(class.roll$n.accesses[duplicated(class.roll$n.accesses)])
x<-vector()
x
x<-vector(numeric, 10)
?vector
x<-vector(mode="numeric", length=10)
x
attributes(class.roll)
names(class.roll)
dimnames(class.roll)
dim(class.roll)
ls()
rm(x)
ls()
result
search()
library(markdown)
library(knitr)
?rpubsUpload
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
help(package=markdown)
markdown::render("Randomization.Rmd")
?render
library(rmarkdown)
render("Randomization.Rmd")
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2<-rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2<-rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2<-rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2
getwd()
ls()
save(file="red_black150408.rda", list=ls())
savehistory("red_black150408.Rhistory")
red.black
str(red.black)
red.black$Color<-factor(red.black$Color, levels=c("Curitiba", "Veja"))
str(red.black)
red.black$Q6_1<-factor(red.black$Q6_1, levels=c("Male", "Female"))
red.black$Q6_2<-factor(red.black$Q6_1, levels=c("Glasses", "No.Glasses"))
red.black$Q6_1<-factor(red.black$Q6_1, levels=c("Male", "Female"))
red.black<-read.table("red_black.txt", header=TRUE, sep="")
str(red.black)
red.black.2<-red.black
red.black.2$Color<-factor(red.black.2$Color, levels=c("Curitiba", "Veja"))
red.black.2$Q6_1<-factor(red.black.2$Q6_1, levels=c("Male", "Female"))
red.black.2$Q6_2<-factor(red.black.2$Q6_2, levels=c("Glasses", "No.Glasses"))
red.black.2$Q6_4<-factor(red.black.2$Q6_4, levels=c("Seoul", "Gyunggi", "Kangwon", "Other"))
red.black.2
red.black.2<-red.black
red.black.2$Color<-factor(red.black.2$Color, levels=c("Curitiba", "Veja"))
red.black.2
red.black.2$Q6_1<-factor(red.black.2$Q6_1, levels=c("1", "2"), labels=c("Male", "Female"))
red.black.2$Q6_2<-factor(red.black.2$Q6_2, levels=c("1", "2"), labels=c("Glasses", "No.Glasses"))
red.black.2$Q6_4<-factor(red.black.2$Q6_4, levels=1:4, labels=c("Seoul", "Gyunggi", "Kangwon", "Other"))
red.black.2
str(red.black.2)
save(file="red_black150408.rda", list=ls())
savehistory("red_black150408.Rhistory")
names(class.roll)
names(class.roll,2)
names(class.roll.2)
getwd()
setwd("~/")
getwd()
ls()
rm(list=ls())
load(".RData")
ls()
mydata
save(file="anscombe.rda", list=ls())
q("no")
q("no")
apply(UCBAdmissions, 1, sum)
dim(UCBAdmissions[c(1,2)])
dim(UCBAdmissions[,,1])
dim(UCBAdmissions[1,,])
apply(UCBAdmissions, c(2,3), sum)
apply(UCBAdmissions, c(2,3), summary)
ftable(apply(UCBAdmissions, c(2,3), summary))
apply(UCBAdmissions, c(2,3), sum)
apply(UCBAdmissions, 3, sum)
ftable(UCBAdmissions, row.vars=c("Gender", "Admit")
)
prop.table(ftable(UCBAdmissions, row.vars=c("Gender", "Admit"))
)
options(digits=2)
prop.table(ftable(UCBAdmissions, row.vars=c("Gender", "Admit")))
prop.table(UCBAdmissions, margin=2:3)
ftable(prop.table(UCBAdmissions, margin=2:3))
ftable(prop.table(UCBAdmissions, margin=2:3), row.vars=2:1)
prop.table(UCBAdmissions, margin=2:3)
ls()
setwd("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/Poll/")
Religion<-c(631,398,152,1025)
names(Religion)<-c("Buddhism", "Protestant", "Catholic", "None")
Rates<-matrix(c(45.8, 21.1, 17.1, 35.2, 24.4, 34.9, 34.2, 28.5, 20.0, 36.4, 37.5, 28.0, 9.7, 7.3, 7.2, 7.8), nrow=4, ncol=4)
poll.by,Religion<-Rates
poll.by.Religion<-Rates
dimnames(poll.by.Religion)<-list(Religion=names(Religion), Candidates=c("Roh", "
YS", "DJ", "JP"))
poll.by.Religion
dimnames(poll.by.Religion)<-list(Religion=names(Religion), Candidates=c("Roh", "YS", "DJ", "JP"))
poll.by.Religion
options(digits=3)
poll.by.Religion
cbind(poll.by.Religion, Religion)
cbind(poll.by.Religion, Size=Religion)
Religion*poll.by.Religion
Religion*poll.by.Religion/100
sum(Religion*poll.by.Religion/100)
options(digits=3)
sum(Religion*poll.by.Religion/100)
Religion*poll.by.Religion/100
options(digits=4)
Religion*poll.by.Religion/100
poll.by.Religion
prop.table(poll.by.Religion, margin=1)
addmargins(prop.table(poll.by.Religion, margin=1))
poll.by.Religion
getwd()
savehistory("87poll.Rhistory")
?as.data.frame
?`*`
?prop.table
ls()
setwd("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/inequality/Lorenz/")
setwd("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/inequality/Piketty//")
load("piketty_lorenz_gini0503.rda")
ls()
us.think<-c(2.9, 6.4, 12, 20, 58)
sum(us.think)
us.reality<-c(0.1, 0.2, 3.9, 11.3, 84))
us.reality<-c(0.1, 0.2, 3.9, 11.3, 84)
sum(us.reality)
us.reality<-c(0.1, 0.2, 3.9, 11.3, 84.5)
us.think<-c(2.9, 6.4, 12, 20, 58.7)
us.x<-(0.2,0.4,0.6,0.8,1.0)
us.x<-c(0.2,0.4,0.6,0.8,1.0)
gini(x=us.x,y=cumsum(us.reality))
gini(x=us.x,y=cumsum(us.reality)/100)
gini(x=us.x,y=cumsum(us.think)/100)
us.want<-c(10, 14, 21, 22, 32)
gini(x=us.x,y=cumsum(us.want)/100)
ls()
save(file="us_5th.rda", list=ls(patt="us")
)
lorenz(x=us.x, y=cumsum(us.think))
lorenz(x=us.x, y=cumsum(us.think)/100)
lorenz(x=c(0,us.x), y=c(0,cumsum(us.think))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="red")))
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="red"))
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.want))/100, col="blue")
lorenz(x=c(0,us.x), y=c(0,cumsum(us.think))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.want))/100, col="blue")
lorenz(x=c(0,us.x), y=c(0,cumsum(us.want))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="blue")
legend(x=20, y=70, legend=c("What we want", "Waht we want", "What we have"),
col="black", "red", "blue"))
col="black", "red", "blue")
col=c("black", "red", "blue")
legend(x=20, y=70, legend=c("What we want", "What we think", "What we have"),
col=c("black", "red", "blue"))
legend(x=0.2, y=70, legend=c("What we want", "What we think", "What we have"),
col=c("black", "red", "blue"))
legend("topleft", inset=0.2,legend=c("What we want", "What we think", "What we have"),
col=c("black", "red", "blue"))
legend("topleft",,legend=c("What we want", "What we think", "What we have"),
col=c("black", "red", "blue"), lty=1)
lorenz(x=c(0,us.x), y=c(0,cumsum(us.want))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="blue")
legend("topleft",inset=0.1,legend=c("What we want", "What we think", "What we have"),
col=c("black", "red", "blue"), lty=1)
title(main="US Wealth Inequality"))
title(main="US Wealth Inequality")
title(xlab="Wealth owners cumulated(%)", "ylab="Wealth cumulated(%)")
title(xlab="Wealth owners cumulated(%)", ylab="Wealth cumulated(%)")
png("us_wealth.png", width=9, height=9)
lorenz(x=c(0,us.x), y=c(0,cumsum(us.want))/100)
png("us_wealth.png", width=640, height=640)
lorenz(x=c(0,us.x), y=c(0,cumsum(us.want))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="blue")
legend("topleft",inset=0.1,legend=c("What we want", "What we think", "What we have"),
title(main="US Wealth Inequality")
col=c("black", "red", "blue"), lty=1)
dev.off()
png("us_wealth.png", width=640, height=640)
lorenz(x=c(0,us.x), y=c(0,cumsum(us.want))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="blue")
legend("topleft",inset=0.1,legend=c("What we want", "What we think", "What we have"),
col=c("black", "red", "blue"), lty=1)
title(main="US Wealth Inequality")
title(xlab="Wealth owners cumulated(%)", ylab="Wealth cumulated(%)")
dev.off()
png("us_wealth.png", width=640, height=640)
lorenz(x=c(0,us.x), y=c(0,cumsum(us.want))/100)
lines(x=c(0,us.x), y=c(0,cumsum(us.reality))/100, col="red")
lines(x=c(0,us.x), y=c(0,cumsum(us.think))/100, col="blue")
legend("topleft",inset=0.1,legend=c("What we want", "What we think", "What we have"),
col=c("black", "blue", "red"), lty=1)
title(xlab="Wealth owners cumulated(%)", ylab="Wealth cumulated(%)")
title(main="US Wealth Inequality")
dev.off()
png("us_wealth.png", width=640, height=640)
source("us_wealth.R")
dev.off()
str(Titanic)
apply(Titanic, c(3,4), sum)[3:4,]
apply(Titanic, c(3,4), sum)[,3:4]
apply(Titanic, c(3,4), sum)
apply(Titanic, c(1,2), sum)
apply(Titanic, c(1,2), sum)[3:4,]
apply(Titanic, c(1,4), sum)[3:4,]
prop.table(apply(Titanic, c(1,2,4), sum)[3:4,], margin=1)
apply(Titanic, c(1,2,4), sum)
apply(Titanic, c(1,2,4), sum)[3:4,]
apply(Titanic, c(1,2,4), sum)[3:4,,]
ftable(apply(Titanic, c(1,2,4), sum)[3:4,,])
ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])
ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,]
ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,]
prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2)
prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2)
table(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2), dnn=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex))
dimnames(Titanic)$Surviced
dimnames(Titanic)$Survived
dimnames(Titanic)$Sex
prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2)
matrix(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2, dimnames=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex))))
matrix(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2, dimnames=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex)))
?matrix
matrix(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2,nrow=2,  dimnames=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex)))
matrix(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2), nrow=2,  dimnames=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex)))
matrix(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2), nrow=2,  dimnames=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex))
matrix(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2), nrow=2,  dimnames=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex))
?table
table(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2),  dnn=list(dimnames(Titanic)$Survived, dimnames(Titanic)$Sex))
str(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2))
table(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2))
?table
?as.table
list.names(prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2))
?as.table
?savehistory
savehistory("Titanic_Simpson.Rhistory")
apply(Titanic, c(3,4), sum)[3:4,]
apply(Titanic, c(3,4), sum)[,3:4]
apply(Titanic, c(1,2), sum)
apply(Titanic, c(1,4), sum)[3:4,]
prop.table(apply(Titanic, c(1,2,4), sum)[3:4,], margin=1)
prop.table(apply(Titanic, c(1,2,4), sum)[3:4,,], margin=1)
prop.table(apply(Titanic, c(1,2,4), sum)[3:4,,], margin=1)
options(digits=2)
prop.table(apply(Titanic, c(1,2,4), sum)[3:4,,], margin=1)
apply(Titanic, c(1,2,4), sum)
apply(Titanic, c(1,2,4), sum)[3:4,,]
ftable(apply(Titanic, c(1,2,4), sum)[3:4,,])
ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])
ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,]
ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,]
prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[1:2,], margin=2)
prop.table(ftable(apply(Titanic, c(1,4,2), sum)[3:4,,])[3:4,], margin=2)
ls()
getwd()
setwd("~/Dropbox/Works/Class/Stat_Methods/R.WD/Simpson_Paradox")
load("tbl_df.rda")
ls()
str(UCBAdmissions.cases)
?glm
glm(Admit~Gender, family=binomial(link="logit"), data=UCBAdmissions.cases)
glm(Admit~Gender+Dept, family=binomial(link="logit"), data=UCBAdmissions.cases)
UCB.glm.1<-glm(Admit~Gender, family=binomial(link="logit"), data=UCBAdmissions.cases)
UCB.glm.2<-glm(Admit~Gender+Dept, family=binomial(link="logit"), data=UCBAdmissions.cases)
anova(UCB.glm.1, UCB.glm.2)
table(UCBAdmissions.cases$Admit)
table(UCBAdmissions.cases$Admit, UCBAdmissions.cases$Gender)
ftable(table(UCBAdmissions.cases$Admit, UCBAdmissions.cases$Gender, UCBAdmissions.cases$Dept))
summary(UCB.glm.1)
summary(UCB.glm.2)
anova(UCB.glm.1, UCB.glm.2, test="Chisq")
coef(UCB.glm.2)
exp(coef(UCB.glm.2))
table(UCBAdmissions.cases$Admit, UCBAdmissions.cases$Gender)
prop.table(table(UCBAdmissions.cases$Admit, UCBAdmissions.cases$Gender), margin=2)
0.3/0.45
?odds
(0.45/0.55)/(0.3/0.7)
str(UCBAdmissions.cases)
summary(UCB.glm.1)
UCBAdmissions.cases[Admit==2]
UCBAdmissions.cases["Admit"==2]
UCBAdmissions.cases["Admit"==2,]
UCBAdmissions.cases[,"Admit"==2]
UCBAdmissions.cases[,"Admit"==1]
UCBAdmissions.cases[["Admit"]]
str(UCBAdmissions.cases$Admit)
?afctor
?factor
?levels
ls()
str(UCBAdmissions.cases$Gender)
levels(UCBAdmissions.cases$Gender)
?levels
attributes(UCBAdmissions.cases$Gender)
attributes(UCBAdmissions.cases$Admit)
?glm
ls()
save(file="UCB_glm.rda", list=ls(patt="glm"))
savehistory("UCB_glm.Rhistory")
