rate.grdp_ij
mean(rate.grdp_ij)
1001/30218
grdp_yy<-c(665,661,699,755,730)
rate.grdp_yy<-c(grdp_yy[2]/grdp_yy[1],grdp_yy[3]/grdp_yy[2],grdp_[4]/
rate.grdp_yy<-c(grdp_yy[2]/grdp_yy[1],grdp_yy[3]/grdp_yy[2],grdp_yy[4]/
grdp_yy[3],grdp_yy[5]/grdp_yy[4])
rate.grdp_yy
mean(rate.grdp_yy)
755/28829
730/30328
699/27349
661/26311
665/25989
23856/40236
23856/24655
9300/9400
10.2/10.3
25545//26269
25545/26269
17.0/14.5
c(14.7/14.5,15.4/14.7,16.4/15.4,17.0/16.4)
mean(c(14.7/14.5,15.4/14.7,16.4/15.4,17.0/16.4))
c(3.6/3.5,4.7/3.6,5.0/4.7,2.4/5.0)
c(5.1/5.1,6.3/5.1,7.1/6.3,6.8/7.1)
c(1.5/1.6,1.6/1.5,2.1/1.6,2.4/2.1)
mean(c(1.5/1.6,1.6/1.5,2.1/1.6,2.4/2.1))
mean(c(5.1/5.1,6.3/5.1,7.1/6.3,6.8/7.1))
mean(c(3.6/3.5,4.7/3.6,5.0/4.7,2.4/5.0))
mean(c(3.6/3.5,4.7/3.6,5.0/4.7,2.4/5.0))-1
mean(c(3.6/3.5,4.7/3.6,5.0/4.7,4.4/5.0))-1
q(save="yes")
x
y
x<-c(0.0,0.5,0.9,0.99,1.0)
y<-c(0.0,0.3,0.75,0.93,1.0)
polygon(x=c(x,rev(x),y=c(x,rev(y)),density=15)
)
polygon(x=c(x,rev(x)),y=c(x,rev(y)),density=15)
plot(x,y,type="l")
abline(v=x,lty=2)
abline(h=c(0,1),lty=2)
polygon(x=c(x,rev(x)),y=c(rep(0,length(x)),rev(y)),density=15,angle=135)
abline(a=1,b=0,lty=1)
?abline
gini<-x[2]y[2]+(x[3]-x[2])*(y[2]+y[3])+(x[4]-x[3])*(y[3]+y[4])+(x[5]-x[4])*(y[4]+y[5])
gini<-x[2]*y[2]+(x[3]-x[2])*(y[2]+y[3])+(x[4]-x[3])*(y[3]+y[4])+(x[5]-x[4])*(y[4]+y[5])
s*2
p<-p+abline(a=o,b=1,lty=1)
p<-p+abline(a=0,b=1,lty=1)
p<-p+polygon(x=c(x,rev(x)),y=c(x,rev(y)),density=15,angle=135)
p<-p+abline(v=x,h=c(0,1),lty=2)
print(p)
p<-plot(x,y,type="l",xlab="",ylab="")
p
?plot
plot(x,y,type="l",xlab="",ylab="")
abline(v=x,h=c(0,1),lty=2)
abline(a=0,b=1,lty=1)
polygon(x=c(x,rev(x)),y=c(x,rev(y)),density=15,angle=135)
s
fix(gini)
gini(x,y)
x.euro2010<-x
y.euro2010<-c(0.0,0.25,0.65,0.90,1.0)
gini(x.euro2010,y.euro2010)
x.usa2010<-x
y.usa2010<-c(0.0,0.2,0.5,0.8,1.0)
gini(x.usa2010,y.usa2010)
x.usa2030<-x
y.usa2030<-c(0.0,0.15,0.4,0.75,1.0)
gini(x.usa2030,y.usa2030)
lines(x.euro2010,y.euro2010,col="blue")
lines(x.usa2010,y.usa2010,col="red")
lines(x.usa2030,y.usa2030,col="grey")
?legend
legend("topright",legend=c("Low","Medium","High","Very High"),col=c("black","blue","red","grey"))
legend("topleft",legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"))
legend("left",legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"))
legend(c(0.1,0.9),legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"))
legend(x=0.1,y=0.9,legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"))
legend(x=0.1,y=0.9,legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"),title="Intensity of Inequality")
legend.gini<-c("Low(Scandinavia, 1970-80)","Medium(Europe 2010)", "High(US 2010, Europe 1910)","Very High(US 2030)")
legend(x=0.1,y=0.9,legend=legend.gini,lty=1,col=c("black","blue","red","grey"),title="Income Inequality")
title(main="Larentz Curve",xlab="Cumulative share of people from lowest to highest income",ylab="Cumulative share of income earned")
title(main="Laurenz Curve",xlab="Cumulative share of people from lowest to highest income",ylab="Cumulative share of income earned")
legend(x=0.05,y=0.9,legend=legend.gini,lty=1,col=c("black","blue","red","grey"),title="Income Inequality")
quartz(dpi=72,width=6,height=6)
legend(x=0.1,y=0.9,legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"),title="Income Inequality")
legend(x=0.05,y=0.95,legend=c("Low","Medium","High","Very High"),lty=1,col=c("black","blue","red","grey"),title="Income Inequality")
save(file="./Documents/통계분석사례연구/R.WD/inequality/inequality.rda",list=ls())
gini
?par
source("./Documents/통계분석사례연구/R.WD/lifetable/gini.r")
axis(side=1,at=c(0.5,0.9,0.99),labels=paste(c(0.5,0.9,0.99)))
axis(side=1,at=c(0.0,0.5,0.9,0.99),labels=paste(c(0.0,0.5,0.9,0.99)))
axis(side=1,at=c(0.0,0.5,0.9,0.99,1.0),labels=paste(c(0.0,0.5,0.9,0.99,1.0)))
axis(side=1,at=c(0.0,0.5,0.9,0.99,1.0),labels=c("0.0","0.5","0.9","0.99","1.0"))
png(file="income_inequality.png",width=480,height=480)
png(file="./Documents/통계분석사례연구/R.WD/inequality/income_inequality2.png",width=480,height=480)
source("./Documents/통계분석사례연구/R.WD/inequality/gini.r")
dev.off()
load(".RData")
load("/Users/coop2711/Dropbox/works/Case_studies_in_stat/R.WD/inequality/Wilkinson/inequality_vs_social_problems.rda")
rm(list=ls())
pnorm(-1/7)
0.5-pnorm(-1/7)
pt(2.5,4)
pt(-1.33, 9)
pt(-3.68, 9)
pt(-3.68, 9)*2
pt(-2.148, 14)*2
?pt
qt(c(0.01,0.05),c(14,15))
qt(c(0.01,0.05),14)
qt(c(0.01,0.05),15)
qt(c(0.99,0.95),15)
qt(c(0.99,0.95),14)
16*70
16*70/8
install.packages("ggplot2")
data(anscombe)
?data.frame
attach(anscombe)
?gl
levels<-gl(n=4,k=nrow(anscombe))
levels
mydata<-data.frame(x=c(x1,x2,x3,x4),y=c(y1,y2,y3.y4),mygroup=levels)
mydata<-data.frame(x=c(x1,x2,x3,x4),y=c(y1,y2,y3,y4),mygroup=levels)
theme_set(theme_bw())
quartz(width=7,height=7,dpi=72)
ggplot(mydata,aes(x,y)) +
geom_point(size=4) +
geom_smooth(method="lm", fill=NA, fullrange=TRUE) +
facet_wrap(~mygroup)
detach(anscombe)
a<-available.packages()
a
install.package("KernSmooth")
install.packages("KernSmooth")
library("KernSmooth")
anscombe
ls()
mydata
?install.packages
?help
data(package=datasets)
search()
library(ggplot2)
data(package=ggplot2)
data(package="ggplot2")
data(package="datasets")
help(package="ggplot2")
getwd()
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='kwlee58', token='7C7161E6D7C1CD45A18E76B2D7558F69', secret='gyHNxMYU+IcwdNqpivIoaEvdurBqOX53vwNE9KbO')
q("yes")
con<-url("http://www.jhsph.edu","r'")
x<-readLines(con)
head(x)
q("no")
ls()#
install.packages("VGAM")#
help(package=VGAM)#
q("yes")#
q("no")#

setwd("~/Dropbox/Works/Class/Stat_Methods/R.WD/")#

load("normal_test2.RData")#

quetelet.chest#

quetelet<-quetelet.chest[,-3]#

quetelet.list<-lapply(quetelet, function(x){rep(x, quetelet$freq)})#

str(quetelet.list)#

quetelet.df<-as.data.frame(quetelet.list)#

head(quetelet.df)#

quetelet.long<-quetelet.df[,-2]#

quetelet.long#

chest<-quetelet$chest#

chest#

freq<-quetelet$freq#

lapply(chest, function(x){rep(x, freq)})#

lapply(chest, function(x){rep(x, times=freq)})#
#

?rep#

lapply(chest, function(x){rep(x, each=freq)})#
#
#

sapply(chest, function(x){rep(x, freq)})#
#

rep(chest, freq)#

rep(quetelet$chest, quetelet$freq)#
#

rep(quetelet$chest, quetelet$freq)#
#
#

apply(quetelet,2, rep(quetelet, quetelet$freq))#

apply(quetelet,2, rep(, times=quetelet$freq))#
#

apply(quetelet,2, function(x){rep(x, times=quetelet$freq)})#
#
#

getwd()#

count.table<-read.table("../therbook/tabledata.txt",header=T)#

count.table#

apply(count.table[,-1],2 function(x){rep(x, count.table$count)})#

apply(count.table[,-1],2, function(x){rep(x, count.table$count)})#
#

apply(count.table[,-1],2, function(x)rep(x, count.table$count))#
#
#

table(apply(count.table[,-1],2, function(x)rep(x, count.table$count)))#
#
#
#

crimtab#

data.frame(crimtab)#

apply(data.frame(crimtab)[,-3], 2, functions(x) rep(x, data.frame(crimtab)[,3]))#
#

apply(data.frame(crimtab)[,-3], 2, function(x)rep(x, data.frame(crimtab)[,3]))#
#
#

str(data.frame(crimtab))#
#

?crimtab#

colnames(crimtab)#

as.numeric(colnames(crimtab))#
#

crimtab.df<-data.frame(crimtab)#
#

str(crimtab.df)#

crimtab.df$finger<-as.numeric(crimtab.df$Var1)#

crimtab.df$height<-as.numeric(crimtab.df$Var2)#
#

str(crimtab.df)#
#

str(crimtab)#

crimtab.df<-data.frame(crimtab, StringsAsFactors=F)#
#
#

str(crimtab.df)#
#
#

?data.frame#

crimtab.df<-data.frame(crimtab, stringsAsFactors=F)#
#
#
#

str(crimtab.df)#
#
#
#

options(stringsAsFactors=)#

options(stringsAsFactors)#
#

options("stringsAsFactors")#
#
#

crimtab.df<-data.frame(crimtab, stringsAsFactors=F)#
#
#
#
#

str(crimtab.df)#
#
#
#
#

ls()#

height<-as.numeric(colnames(crimtab))#

finger<-as.numeric(rownames(crimtab))#

height#

finger#

class(height)#
#

class(finger)#
#
#

crimtab.df<-data.frame(height=rep(height,colSums(crimtab)),finger=rep(finger,rowSums(crimtab)))#
#
#
#

crimtab.df#

plot(crimtab.df[,1],crimtab.df[,2])#

quartz(width=12,height=12,dpi=72)#

plot(crimtab.df[,1],crimtab.df[,2])#
#

plot(crimtab.df[,1],crimtab.df[,2]+(runif(3000)-0.5)/10)#
#
#

plot(crimtab.df[,1]/2.54,crimtab.df[,2]+(runif(3000)-0.5)/10)#
#
#
#

crimtab.df/2.54#
#

plot(crimtab.df[,1]/2.54+runif(3000)-0.5,crimtab.df[,2]+(runif(3000)-0.5)/10)#
#
#
#
#

